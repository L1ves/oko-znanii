import React, { useEffect, useRef, useState } from 'react';
import Image from 'next/image';

interface FAQItem {
  id: number;
  question: string;
  answer: string;
  isActive?: boolean;
}

const faqData: FAQItem[] = [
  {
    id: 1,
    question: '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∞–≤—Ç–æ—Ä–∞?',
    answer: '–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∞–≤—Ç–æ—Ä–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å, —Ä–µ–π—Ç–∏–Ω–≥, –æ—Ç–∑—ã–≤—ã –∏ –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ –æ–ø—ã—Ç –≤ –Ω—É–∂–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏.'
  },
  {
    id: 2,
    question: '–ü—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –ª–∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ –ø–ª–∞–≥–∏–∞—Ç?',
    answer: '–î–∞, –≤—Å–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø–ª–∞–≥–∏–∞—Ç —Å –ø–æ–º–æ—â—å—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤. –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ –º–µ–Ω–µ–µ 90%.'
  },
  {
    id: 3,
    question: '–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É?',
    answer: '–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –≤—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã. –ï—Å–ª–∏ –≤–∞—Å –Ω–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∞–≤—Ç–æ—Ä –≤–Ω–µ—Å–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π.'
  },
  {
    id: 4,
    question: '–ö–∞–∫ –º–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑?',
    answer: '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º–∏ –∫–æ—à–µ–ª—å–∫–∞–º–∏ (–Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏, Qiwi, Payeer) –∏ –º–æ–±–∏–ª—å–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –†–æ—Å—Å–∏–∏.',
    isActive: true
  },
  {
    id: 5,
    question: '–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å–∫–∏–¥–∫–∏?',
    answer: '–î–∞, —É –Ω–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ —Å–µ–∑–æ–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏!'
  }
];

const FAQ: React.FC = () => {
  const [activeItems, setActiveItems] = useState<Set<number>>(
    new Set(faqData.filter(item => item.isActive).map(item => item.id))
  );
  const panelsRef = useRef<Record<number, HTMLDivElement | null>>({});

  useEffect(() => {
    activeItems.forEach((id) => {
      const panel = panelsRef.current[id];
      if (panel) {
        const content = panel.firstElementChild as HTMLDivElement | null;
        const targetHeight = content ? content.scrollHeight : 0;
        panel.style.maxHeight = `${targetHeight}px`;
      }
    });
  }, [activeItems]);

  const toggleItem = (id: number) => {
    const newActiveItems = new Set(activeItems);
    if (newActiveItems.has(id)) {
      newActiveItems.delete(id);
    } else {
      newActiveItems.add(id);
    }
    setActiveItems(newActiveItems);
  };

  return (
    <section className="faq" id="faq">
      <div className="mcontainer">
        <div className="faq__wrapper">
          <figure className="faq__photo">
            <Image className="faq__photo-image" src="/assets/faq/faq-image.png" alt="faq" width={1344} height={600} />
          </figure>

          <div className="faq__content">
            <h2 className="faq__title">–ß–∞—Å—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç ü§î</h2>

            {faqData.map((item) => (
              <div 
                key={item.id} 
                className={`faq__item ${activeItems.has(item.id) ? 'active' : ''}`}
              >
                <div 
                  className="faq__item-toggler"
                  onClick={() => toggleItem(item.id)}
                  style={{ cursor: 'pointer' }}
                >
                  <div className="faq__item-toggler-question">{item.question}</div>
                </div>

                <div
                  ref={(el) => {
                    if (!panelsRef.current) panelsRef.current = {};
                    panelsRef.current[item.id] = el;
                    if (el) {
                      el.style.maxHeight = activeItems.has(item.id)
                        ? `${(el.firstElementChild as HTMLDivElement | null)?.scrollHeight || 0}px`
                        : '0px';
                    }
                  }}
                  className="faq__item-panel"
                >
                  <div className="faq__item-panel-answer">
                    {item.answer}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default FAQ;
